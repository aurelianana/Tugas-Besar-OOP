package Interface;

import Classes.Move_Flappy;
import Classes.Move_Pipe;
import java.awt.Color;
import java.awt.Point;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.edisoncor.gui.panel.PanelImage;
import sounds.Sound;


public class Game extends javax.swing.JFrame {

    public static JLabel jFlappy;
    public static JLabel jLabel2;
    public static JLabel jLabel3;
    public static JLabel jLabel4;
    private final JPanel jPanel1;
    public static JLabel jScore;
    public PanelImage jGround;
    public static JLabel jPipe_bottom1;
    public static JLabel jPipe_bottom2;
    public static JLabel jPipe_up1;
    public static JLabel jPipe_up2;
    public static PanelImage panelImage1;
    private Move_Flappy mvnt_flappy;
    private Move_Pipe mvnt_pipe;
    private boolean start = false;
    private Score skor;
    private final Login login;
    private JPanel panel1;
    private JPanel panel2;
    public String name;
    static public boolean con_exitosa = false;
    Point posicionflappy;
    public String ruta = "";
    int speed = 4;

    public Game() {
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        jGround = new org.edisoncor.gui.panel.PanelImage();
        jScore = new javax.swing.JLabel();
        jFlappy = new javax.swing.JLabel();
        jPipe_up1 = new javax.swing.JLabel();
        jPipe_bottom1 = new javax.swing.JLabel();
        jPipe_up2 = new javax.swing.JLabel();
        jPipe_bottom2 = new javax.swing.JLabel();
        initComponents();
        this.setLocationRelativeTo(null);
        hideObjects(false);
        login = new Login();
        showLogin();
        EventosExternos();
        this.setTitle("FLAPPY SLIME");
        skor = new Score(this);
        posicionflappy = jFlappy.getLocation();
        this.jPanel1.setSize(400, 607);
    }

    @SuppressWarnings("unchecked")
    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/MAPA_NRO1.png"))); // NOI18N
        panelImage1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelImage1MousePressed(evt);
            }
        });
        panelImage1.setLayout(null);

        jGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/piso.png"))); // NOI18N

        javax.swing.GroupLayout jSueloLayout = new javax.swing.GroupLayout(jGround);
        jGround.setLayout(jSueloLayout);
        jSueloLayout.setHorizontalGroup(
                jSueloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 580, Short.MAX_VALUE)
        );
        jSueloLayout.setVerticalGroup(
                jSueloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 180, Short.MAX_VALUE)
        );

        panelImage1.add(jGround);
        jGround.setBounds(-130, 470, 580, 180);

        jScore.setFont(new java.awt.Font("Verdana", 1, 40)); // NOI18N
        jScore.setForeground(new java.awt.Color(255, 255, 255));
        jScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScore.setText("0");
        panelImage1.add(jScore);
        jScore.setBounds(0, 10, 400, 49);

        jFlappy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pezRojo1.png"))); // NOI18N
        jFlappy.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFlappyKeyReleased(evt);
            }
        });
        panelImage1.add(jFlappy);
        jFlappy.setBounds(70, 230, 34, 24);

        jPipe_up1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Tubo_1.png"))); // NOI18N
        panelImage1.add(jPipe_up1);
        jPipe_up1.setBounds(70, -120, 52, 320);

        jPipe_bottom1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Tubo_2.png"))); // NOI18N
        panelImage1.add(jPipe_bottom1);
        jPipe_bottom1.setBounds(70, 280, 52, 320);

        jPipe_up2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Tubo_1.png"))); // NOI18N
        panelImage1.add(jPipe_up2);
        jPipe_up2.setBounds(290, -120, 52, 320);

        jPipe_bottom2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Tubo_2.png"))); // NOI18N
        panelImage1.add(jPipe_bottom2);
        jPipe_bottom2.setBounds(290, 280, 52, 320);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                        .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pack();
    }

private void jFlappyKeyReleased(java.awt.event.KeyEvent evt) {
        if (start) {
            if (evt.getExtendedKeyCode() == 32) {
                this.mvnt_flappy.setSpeed(increaseSpeed());
                this.mvnt_flappy.setJump(true);
                jFlappy.requestFocus(true);
                Sound.saltar();
            }
            PipeTouched();
        }
    }

    private void panelImage1MousePressed(java.awt.event.MouseEvent evt) {
        if (start) {
            this.mvnt_flappy.setSpeed(increaseSpeed());
            this.mvnt_flappy.setJump(true);
            jFlappy.requestFocus(true);
            Sound.saltar();
        }
    }

    private int increaseSpeed() {
        int points = Integer.parseInt(jScore.getText());
        if (points == 150 || points == 300) {
            speed = speed - 1;
        }
        return speed;
    }

    private void EventosExternos() {
        login.jButton1.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        name = this.login.jTextField1.getText();
        this.panel1.setVisible(false);
        Start();
        hideObjects(true);
    }

    public void Start() {
        mvnt_pipe = new Move_Pipe();
        mvnt_flappy = new Move_Flappy(this);
        mvnt_pipe.start();
        mvnt_flappy.start();
        start = true;
        jFlappy.requestFocus();
        this.setTitle("FLAPPY SLIME - " + name);
    }

    public void PipeTouched() {
        Point loclz_Flappy = jFlappy.getLocation();
        Point loclz_Tubo1 = jPipe_up1.getLocation();
        Point loclz_Tubo2 = jPipe_up2.getLocation();
        Point loclz_Tubo3 = jPipe_bottom1.getLocation();
        Point loclz_Tubo4 = jPipe_bottom2.getLocation();
        if (loclz_Flappy.x > (loclz_Tubo1.x - 32) && loclz_Flappy.x < ((loclz_Tubo1.x - 32) + 82) && loclz_Flappy.y < (loclz_Tubo1.y + 318)) {
            Sound.choque();
            this.mvnt_pipe.stop();
            this.mvnt_flappy.setJump(false);
            start = false;
            Sound.caida();
        } else if (loclz_Flappy.x > (loclz_Tubo2.x - 32) && loclz_Flappy.x < ((loclz_Tubo2.x - 32) + 82) && loclz_Flappy.y < (loclz_Tubo2.y + 318)) {
            Sound.choque();
            this.mvnt_pipe.stop();
            this.mvnt_flappy.setJump(false);
            start = false;
            Sound.caida();
        } else if (loclz_Flappy.x > (loclz_Tubo3.x - 32) && loclz_Flappy.x < ((loclz_Tubo3.x - 32) + 82) && loclz_Flappy.y > (loclz_Tubo3.y - 22)) {
            Sound.choque();
            this.mvnt_pipe.stop();
            this.mvnt_flappy.setJump(false);
            start = false;
            Sound.caida();
        } else if (loclz_Flappy.x > (loclz_Tubo4.x - 32) && loclz_Flappy.x < ((loclz_Tubo4.x - 32) + 82) && loclz_Flappy.y > (loclz_Tubo4.y - 22)) {
            Sound.choque();
            this.mvnt_pipe.stop();
            this.mvnt_flappy.setJump(false);
            start = false;
            Sound.caida();
        }
    }

    private void hideObjects(boolean accion) {
        jFlappy.setVisible(accion);
        jPipe_bottom1.setVisible(accion);
        jPipe_bottom2.setVisible(accion);
        jPipe_up1.setVisible(accion);
        jPipe_up2.setVisible(accion);
        jScore.setVisible(accion);
    }

    public synchronized void TouchValidation() {
        int y = jFlappy.getLocation().y;
        if (y == 448) {
            if (Sound.terminochoque) {
                Sound.choque();
            }
            GameOver gameover = new GameOver(this, true);
            try {
                Thread hilo = new Thread() {
                    @Override
                    public void run() {
                        mvnt_pipe.stop();
                        Move_Flappy.stop = true;
                        stop();
                    }
                };
                hilo.start();
            } catch (Exception e) {
            }
            gameover.setVisible(true);
        }
    }

    public void showScore() {
        Sound.terminocaida = true;
        Sound.terminochoque = true;
        hideObjects(false);
        panel2 = new JPanel();
        panel2.setBounds(0, 0, this.getWidth(), 550);
        panel2.add(skor);
        skor.setBounds(0, 0, panel2.getWidth(), panel2.getHeight());
        panelImage1.add(panel2);
        panel2.setBackground(new Color(187, 214, 207));
        skor.setVisible(true);
        skor.show();
        panel2.setVisible(true);
    }

    public void StartNew() {
        jFlappy.setLocation(posicionflappy);
        jScore.setText("0");
        this.panel2.setVisible(false);
        Start();
        hideObjects(true);
        skor = new Score(this);
    }

    private void showLogin() {
        panel1 = new JPanel();
        panel1.setBounds(10, 200, 380, 140);
        panel1.add(login);
        login.setBounds(0, 0, panel1.getWidth(), panel1.getHeight());
        panelImage1.add(panel1);
        panel1.setBackground(new Color(255, 255, 153));
        login.setVisible(true);
        panel1.setVisible(true);
    }

    void StartLogin() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
