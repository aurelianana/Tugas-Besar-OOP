package Clases;


import Interface.Game;
import poin.suara;

public class Pipa extends Thread {

    static int kecepatan;
    private static int poin;

    public Pipa() {
        kecepatan = 7;
        poin = 0;
        ocultarTubos();
    }

    private static synchronized void poinSkor() {
        int pipa1 = Game.jPipa_atas1.getLocation().x;
        int pipa2 = Game.jPipa_bawah2.getLocation().x;
        if (pipa1 == 90) {
            suara.poin();
            poin = poin + 1;
            Game.jSkor.setText(poin + "");
            if (poin == 30 || poin == 50 || poin == 130 || poin == 160 || poin == 200 || poin == 300) {
                kecepatan = kecepatan - 1;
            }
        } else if (pipa2 == 90) {
            suara.poin();
            poin = poin + 1;
            Game.jSkor.setText(poin + "");
            if (poin == 30 || poin == 50 || poin == 130 || poin == 160 || poin== 200 || poin == 300) {
                kecepatan = kecepatan - 1;
            }
        }
    }

    @Override
    public void run() {
        int posisi1 = hasilposisiacak();
        int posisi2 = hasilposisiacak();
        int x1 = Game.jPipa_atas1.getLocation().x;
        int x2 = Game.jPipa_bawah2.getLocation().x;
        while (true) {
            try {
                Thread.sleep(getKecepatan());
                x1--;
                x2--;
                Game.jPipa_atas1.setLocation(x1, posisi1);
                Game.jPipa_atas1.setLocation(x1, (posisi1 + 425));
                Game.jPipa_bawah2.setLocation(x2, posisi2);
                Game.jPipa_bawah2.setLocation(x2, (posisi2 + 425));
                if (x1 <= -51) {
                    posisi1 = hasilposisiacak();
                    x1 = 425;
                }
                if (x2 <= -51) {
                    posisi2 = hasilposisiacak();
                    x2 = 425;
                }
                poinSkor();
            } catch (InterruptedException ex) {
                System.out.println("Error dalam pemindahan Pipa " + ex);
            }
        }
    }

    private void ocultarTubos() {
        Game.jPipa_atas1.setLocation(460, 500);
        Game.jPipa_atas1.setLocation(460, 1000);
        Game.jPipa_bawah2.setLocation(700, 500);
        Game.jPipa_bawah2.setLocation(700, 1000);
    }

    public int getKecepatan() {
        return kecepatan;
    }

    private int generarPosisiAcak() {
        int nomor = (int) (Math.random() * (0 - (-200)) + (-200));
        return nomor;
    }

    private int hasilposisiacak() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}

